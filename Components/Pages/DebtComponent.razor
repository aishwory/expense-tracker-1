@page "/dashboard/debt"
@using ExpenseTracker.Models
@inject ExpenseTracker.Services.CashFlowService CashFlowService
@inject IJSRuntime JSRuntime

<link href="css/debt.css" rel="stylesheet" />

<h2>Add Debt</h2>

<div class="form-container">
    <h3>Add Debts</h3>

    <div class="form-group">
        <label for="source"> Debt Source</label>
        <input id="source" type="text" @bind="DebtSource" placeholder="Lender name" />
    </div>

    <div class="form-group">
        <label for="amount">Amount</label>
        <input id="amount" type="number" @bind="Amount" placeholder="Debt amount" />
    </div>

    <div class="form-group">
        <label for="dueDate">Due Date</label>
        <input id="dueDate" type="date" @bind="DueDate" />
    </div>

    <div class="form-group">
        <label for="notes">Notes</label>
        <textarea id="notes" @bind="Notes" placeholder="Optional Notes"></textarea>
    </div>

    <div class="button-group">
        <button class="add-btn" @onclick="AddDebt">Add Debt</button>
        <button class="cancel-btn" @onclick="ClearForm">Cancel</button>
    </div>
</div>

@code {
    private string  DebtSource = string.Empty;
    private decimal Amount;
    private DateTime DueDate = DateTime.Today;
    private string Notes = string.Empty;

    private async Task AddDebt()
    {
        if (string.IsNullOrEmpty(DebtSource) || Amount <= 0)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Please fill in all required fields!");
            return;
        }

        var newDebt = new Debt
            {
                Source = DebtSource,
                Amount = Amount,
                DueDate = DueDate,
                Notes = Notes,
                IsCleared = false
            };

        CashFlowService.AddDebt(newDebt);
        await JSRuntime.InvokeVoidAsync("alert", "Debt added successfully!");
        ClearForm();
    }

    private void ClearForm()
    {
        DebtSource = string.Empty;
        Amount = 0;
        DueDate = DateTime.Today;
        Notes = string.Empty;
    }
}
